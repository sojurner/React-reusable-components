module.exports = /* eslint-disable */ [{"name":"LystButton","description":"","props":{"btnProps":{"type":{"name":"shape","value":{"txt":{"name":"node","required":false},"classes":{"name":"object","required":false},"color":{"name":"string","required":false},"disabled":{"name":"bool","required":false},"disabledFocusRipple":{"name":"bool","required":false},"disableRipple":{"name":"bool","required":false},"fullWidth":{"name":"bool","required":false},"href":{"name":"string","required":false},"mini":{"name":"bool","required":false},"size":{"name":"string","required":false},"variant":{"name":"string","required":false}}},"required":false,"description":"Button","defaultValue":{"value":"{\n  txt: 'Default',\n  color: 'primary',\n  disabled: false,\n  href: '/default',\n  size: 'medium',\n  variant: 'outlined'\n}","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nconst LystButton = ({ btnProps }) => {\n  const { txt, ...rest } = btnProps;\n  return <Button {...rest}>Hello {txt}</Button>;\n};\n\nconst { string, shape, bool, object, node } = PropTypes;\n\nLystButton.propTypes = {\n  /** Button */\n  btnProps: shape({\n    txt: node,\n    classes: object,\n    color: string,\n    disabled: bool,\n    disabledFocusRipple: bool,\n    disableRipple: bool,\n    fullWidth: bool,\n    href: string,\n    mini: bool,\n    size: string,\n    variant: string\n  })\n};\n\nLystButton.defaultProps = {\n  btnProps: {\n    txt: 'Default',\n    color: 'primary',\n    disabled: false,\n    href: '/default',\n    size: 'medium',\n    variant: 'outlined'\n  }\n};\n\nexport default LystButton;\n","examples":[{"name":"ExampleLystButton","description":"","code":"import React from 'react';\nimport LystButton from '../../../components/LystButton/LystButton';\n\nconst btnOptions = {\n  color: ['primary', 'default', 'inherit', 'secondary'],\n  disabled: [false, true],\n  disableRipple: [false, true],\n  disableFocusRipple: [false, true],\n  size: ['medium', 'small', 'large'],\n  variant: ['text', 'outlined', 'contained']\n};\n\nconst ExampleLystButton = () => {\n  const [disabled, setDisabled] = React.useState(false);\n  const [disableRipple, setDisableRipple] = React.useState(false);\n  const [disableFocusRipple, setDisableFocusRipple] = React.useState(false);\n\n  const [color, setColor] = React.useState('primary');\n  const [size, setSize] = React.useState('medium');\n  const [variant, setVariant] = React.useState('text');\n\n  const updateValue = event => {\n    const { id, value } = event.target;\n    switch (id) {\n      case 'color':\n        setColor(value);\n        break;\n      case 'disabled':\n        setDisabled(value);\n        break;\n      case 'disableRipple':\n        setDisableRipple(value);\n        break;\n      case 'disableFocusRipple':\n        setDisableFocusRipple(value);\n        break;\n      case 'size':\n        setSize(value);\n        break;\n      case 'variant':\n        setVariant(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <LystButton\n        btnProps={{\n          color,\n          disabled,\n          size,\n          variant,\n          disableRipple,\n          disableFocusRipple\n        }}\n      />\n      <form\n        style={{\n          margin: '1rem 0',\n          display: 'flex',\n          flexWrap: 'wrap'\n        }}\n      >\n        {Object.keys(btnOptions).map(key => {\n          return (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                margin: '1rem 2rem'\n              }}\n            >\n              <label style={{ textTransform: 'capitalize' }} for={`${key}`}>\n                {key}\n              </label>\n              <select onChange={updateValue} id={`${key}`}>\n                {btnOptions[key].map((listItem, index) => {\n                  return (\n                    <option\n                      selected={!index}\n                      value={listItem}\n                    >{`${listItem}`}</option>\n                  );\n                })}\n              </select>\n            </div>\n          );\n        })}\n      </form>\n    </>\n  );\n};\n\nexport default ExampleLystButton;\n"}]}]